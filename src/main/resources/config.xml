<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans.xsd  
	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.think.in.java.aop"/>

    <aop:aspectj-autoproxy>
        <aop:include name="annotationTest"/>
        <!--<aop:include name="annotationTest2"/>-->
    </aop:aspectj-autoproxy>

    <!--&lt;!&ndash; 目标对象 &ndash;&gt;-->
    <!--<bean id="knight" class="com.think.in.java.aop.annotation.BraveKnight"/>-->
    <!--&lt;!&ndash; 切面bean &ndash;&gt;-->
    <!--<bean id="mistrel" class="com.think.in.java.aop.annotation.Minstrel"/>-->
    <!--&lt;!&ndash; 面向切面编程 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:aspect ref="mistrel">-->
            <!--&lt;!&ndash; 定义切点 &ndash;&gt;-->
            <!--<aop:pointcut expression="execution(* *.saying(..))" id="embark"/>-->
            <!--&lt;!&ndash; 声明前置通知 (在切点方法被执行前调用)&ndash;&gt;-->
            <!--<aop:before method="beforSay" pointcut-ref="embark"/>-->
            <!--&lt;!&ndash; 声明后置通知 (在切点方法被执行后调用)&ndash;&gt;-->
            <!--<aop:after method="afterSay" pointcut-ref="embark"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
</beans>